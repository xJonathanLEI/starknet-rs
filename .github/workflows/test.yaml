on:
  push:
    branches:
      - master
  pull_request:

name: Tests
jobs:
  unix-test:
    name: Unix tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]
        toolchain: [stable, nightly]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true

      - name: Run cargo tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 20
          retry_wait_seconds: 30
          command: cargo test --all

  win-test:
    name: Windows tests
    runs-on: windows-latest
    strategy:
      matrix:
        toolchain: [stable, nightly]
        target: [x86_64-pc-windows-gnu, x86_64-pc-windows-msvc]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Run cargo tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 20
          retry_wait_seconds: 30
          command: cargo test --all --target ${{ matrix.target }} --exclude starknet-cxx

  wasm-test:
    name: WASM tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Add wasm32-unknown-unknown target
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Build project
        run: |
          cargo build --all --target wasm32-unknown-unknown --exclude starknet-cxx

      - name: Install wasm-pack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: wasm-pack

      - name: Run starknet-crypto tests
        run: |
          (cd ./starknet-crypto && wasm-pack test --release --node)

      - name: Run starknet-core tests
        run: |
          (cd ./starknet-core && wasm-pack test --release --node)

      - name: Run starknet-signers tests
        run: |
          (cd ./starknet-signers && wasm-pack test --release --node)

      - name: Run starknet-macros tests
        run: |
          (cd ./starknet-macros && wasm-pack test --release --node)

  no-std-build:
    name: no-std build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Add --target thumbv6m-none-eabi target
        run: |
          rustup target add thumbv6m-none-eabi

      - name: Build starknet-crypto
        run: |
          cargo build --package starknet-crypto \
            --target thumbv6m-none-eabi \
            --no-default-features

          cargo build --package starknet-crypto \
            --target thumbv6m-none-eabi \
            --no-default-features \
            --features alloc

      - name: Build starknet-core
        run: |
          cargo build --package starknet-core \
            --target thumbv6m-none-eabi \
            --no-default-features
