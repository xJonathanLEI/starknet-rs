on:
  push:
    branches:
      - master
  pull_request:

name: Linting

jobs:
  lint:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Use Rust cache
        uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true
      - name: Install prettier
        run: |
          yarn global add prettier
      - name: Check Markdown format
        run: |
          prettier --check "**/*.md"
      - name: Check Yaml format
        run: |
          prettier --check "**/*.{yaml,yml}"
      - name: Check JSON format
        run: |
          EXIT_CODE="0";
          readarray -d '' FILES < <(find -type f -name "*.json" -not -path "./target/*");
          for FILE in ${FILES[@]}; do
              cat $FILE | jq > /tmp/formatted_json.json;
              if cmp --silent "$FILE" /tmp/formatted_json.json; then
                  printf "\033[1;30m$FILE\033[0m OK\n";
              else
                  printf "\033[1;33m$FILE\033[0m FAILED\n";
                  EXIT_CODE="1";
              fi
          done
          exit $EXIT_CODE;
      - name: Check Rust format
        run: |
          cargo fmt --all -- --check
      - name: Run Clippy lints
        run: |
          cargo clippy --all --all-targets -- -D warnings
